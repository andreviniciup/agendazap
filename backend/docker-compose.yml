version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: agendazap_postgres
    environment:
      POSTGRES_DB: agendazap
      POSTGRES_USER: agendazap
      POSTGRES_PASSWORD: agendazap123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - agendazap_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: agendazap_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agendazap_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build: .
    container_name: agendazap_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://agendazap:agendazap123@postgres:5432/agendazap
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - agendazap_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # n8n (Automação)
  n8n:
    image: n8nio/n8n:latest
    container_name: agendazap_n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - WEBHOOK_URL=http://localhost:5678/webhook
      - GENERIC_TIMEZONE=America/Sao_Paulo
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - agendazap_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  n8n_data:

networks:
  agendazap_network:
    driver: bridge

