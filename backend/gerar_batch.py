#!/usr/bin/env python3
import os, sys, random
from pathlib import Path

os.environ.setdefault("SECRET_KEY", "seed_secret_key_long_enough_1234567890")
_here = Path(__file__).resolve().parent
_db_path = (_here / "seed.db").as_posix()
os.environ.setdefault("DATABASE_URL", f"sqlite:///{_db_path}")
os.environ.setdefault("ENVIRONMENT", "development")
os.environ.setdefault("DEBUG", "true")
sys.path.insert(0, str(Path(__file__).parent))

from app.services.bot.data_collector import DataCollector, LabelQuality

c = DataCollector()

# Dados variados para cada inten√ß√£o
dados = {
    'price': [f'{p} {s}' for p in ['quanto custa', 'qual o valor', 'quanto √©', 'pre√ßo de', 'valor do', 'custa quanto', 'quanto sai', 'quanto fica', 'me fala o pre√ßo', 'qual o pre√ßo'] for s in ['', 'isso', 'consulta', 'procedimento', 'sess√£o', 'tratamento', 'corte', 'limpeza', 'avalia√ß√£o', 'exame']] * 3,
    
    'availability': [f'{p} {d}' for p in ['tem vaga', 'tem hor√°rio', 'tem dispon√≠vel', 'quando tem', 'tem hoje', 'tem amanh√£', 'que horas tem', 'qual hor√°rio dispon√≠vel', 'hor√°rio livre', 'vaga dispon√≠vel'] for d in ['', 'hoje', 'amanh√£', 'essa semana', 'pr√≥xima semana', 'de manh√£', 'de tarde', 'de noite']] * 2,
    
    'cancel': [f'{p} {r}' for p in ['quero cancelar', 'preciso cancelar', 'cancelar', 'desmarcar', 'n√£o vou poder', 'n√£o vou conseguir', 'tenho que cancelar', 'posso cancelar', 'cancela pra mim', 'desmarca pra mim'] for r in ['', 'meu hor√°rio', 'minha consulta', 'meu agendamento', 'hoje', 'amanh√£', 'essa semana']] * 2,
    
    'reschedule': [f'{p} {r}' for p in ['quero remarcar', 'preciso remarcar', 'remarcar', 'mudar hor√°rio', 'trocar dia', 'pode remarcar', 'consigo remarcar', 'remarcar pra outro dia', 'mudar data', 'trocar hor√°rio'] for r in ['', 'meu hor√°rio', 'minha consulta', 'para outro dia', 'para semana que vem', 'para amanh√£']] * 2,
    
    'services': [f'{p} {s}' for p in ['que servi√ßos', 'quais servi√ßos', 'o que fazem', 'que procedimentos', 'quais procedimentos', 'fazem o que', 'servi√ßos dispon√≠veis', 'me fala os servi√ßos', 'lista de servi√ßos', 'que tratamentos'] for s in ['', 'voc√™s t√™m', 'voc√™s fazem', 'tem a√≠', 'oferecem', 'dispon√≠veis']] * 2,
    
    'address': [f'{p} {e}' for p in ['onde fica', 'qual o endere√ßo', 'endere√ßo', 'como chego', 'localiza√ß√£o', 'fica onde', 'onde voc√™s ficam', 'onde √©', 'qual a localiza√ß√£o', 'me manda o endere√ßo'] for e in ['', 'a√≠', 'da cl√≠nica', 'do consult√≥rio', 'do estabelecimento']] * 2,
    
    'payment': [f'{p} {m}' for p in ['aceita cart√£o', 'aceita pix', 'aceita dinheiro', 'formas de pagamento', 'como pagar', 'qual pagamento', 'pode pagar com', 'pagamento', 'aceita d√©bito', 'aceita cr√©dito'] for m in ['', 'a√≠', 'cart√£o', 'pix', 'dinheiro', 'd√©bito', 'cr√©dito']] * 2,
    
    'business_hours': [f'{p} {h}' for p in ['hor√°rio de funcionamento', 'que horas abre', 'que horas fecha', 'funciona quando', 'abre que horas', 'fecha que horas', 'hor√°rio', 'funciona que dias', 'aberto quando', 'hor√°rio de atendimento'] for h in ['', 'hoje', 'amanh√£', 'no s√°bado', 'no domingo', 'na semana']] * 2,
    
    'about': [f'{p} {i}' for p in ['como funciona', 'me explica', 'quero saber', 'informa√ß√µes', 'funciona como', 'o que √©', 'pode explicar', 'n√£o entendi', 'como √©', 'me conta'] for i in ['', 'isso', 'o processo', 'o procedimento', 'o tratamento', 'como funciona']] * 2,
    
    'human': [f'{p} {a}' for p in ['falar com atendente', 'quero falar com pessoa', 'atendimento humano', 'preciso falar com algu√©m', 'tem algu√©m', 'quero falar com algu√©m', 'atendente', 'pessoa real', 'falar com gente', 'quero ajuda humana'] for a in ['', 'por favor', 'agora', 'urgente']] * 2
}

print("üöÄ Gerando dados em lote...")
total = 0
for intent, textos in dados.items():
    for texto in textos:
        if texto.strip():
            c.log_interaction(
                text=texto.strip(),
                intent=intent,
                confidence=random.uniform(0.75, 0.95),
                label_quality=LabelQuality.CONFIDENT.value,
                user_whatsapp=f'5511999{random.randint(1000,9999)}',
                context={'source': 'batch_gen'}
            )
            total += 1
    print(f"  ‚úÖ {intent}: {len(textos)} exemplos")

stats = c.get_stats()
print(f"\nüìä TOTAL GERADO: {total} exemplos")
print(f"üìä TOTAL NO BANCO: {stats['total_examples']}")
print(f"üìä PRONTOS PARA TREINO: {stats['ready_to_train']}")

